<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	 			http://www.springframework.org/schema/context   
               http://www.springframework.org/schema/context/spring-context-3.0.xsd  
               ">

	<context:property-placeholder location="classpath*:/*config.properties" />

	<context:annotation-config />
	<context:component-scan base-package="com.leechg.*" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<!-- 【必须】 数据库驱动 -->

		<property name="driverClassName" value="${jdbc.driver}" />

		<!-- 【必须】 数据库连接地址 -->

		<property name="url" value="${jdbc.url}" />

		<!-- 【必须】 数据库用户名 -->

		<property name="username" value="${jdbc.username}" />

		<!-- 【必须】 数据库密码 -->

		<property name="password" value="${jdbc.password}" />

		<!-- 可选 启动时创建的连接数 -->

		<property name="initialSize" value="5" />

		<!-- 可选 同时可从池中分配的最多连接数，0无限制 -->

		<property name="maxActive" value="10" />

		<!-- 可选 池中不会被释放的最多空闲连接数 0无限制 -->

		<property name="maxIdle" value="0" />

		<!-- 可选 同时能从语句池中分配的预处理语句最大值，0无限制 -->

		<property name="maxOpenPreparedStatements" value="100" />

		<!-- 可选 抛异常前池等待连接回收最大时间（当无可用连接），-1无限等待 -->

		<property name="maxWait" value="1000" />

		<!-- 可选 连接在池中保持空闲而不被回收的最大时间 -->

		<property name="minEvictableIdleTimeMillis" value="2000" />

		<!-- 可选 不创建新连接情况下池中保持空闲的最小连接数 -->

		<property name="minIdle" value="2" />

		<!-- 可选 布尔值，是否对预处理语句进行池管理 -->

		<property name="poolPreparedStatements" value="true" />

	</bean>

	<bean id="dataSource2"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="${jdbc.driver}" />

		<property name="url" value="${jdbc.url}" />

		<property name="username" value="${jdbc.username}" />

		<property name="password" value="${jdbc.password}" />

	</bean>
	 
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" /> 
		<!-- hibernate的相关属性配置 -->
		
		<property name="hibernateProperties" > 
			 <props>
			 <prop key="hibernate.dialect">${hibernate.dialect}</prop>
			 <prop key="hibernate.hbm2ddl.auto">update</prop>
			 <prop key="hibernate.show_sql">true</prop>
			 <!-- 是否格式化sql，优化显示 -->
			 <prop key="hibernate.format_sql">true</prop>
			 <!-- 是否开启二级缓存 -->
			 <prop key="hibernate.cache.use_second_level_cache">false</prop>
			 <!-- 是否开启查询缓存 -->
			 <prop key="hibernate.cache.use_query_cache">false</prop>
			 <!-- 数据库批量查询最大数 -->
			 <prop key="hibernate.jdbc.fetch_size">50</prop>
			 <!-- 数据库批量更新、添加、删除操作最大数 -->
			 <prop key="hibernate.jdbc.batch_size">50</prop>
			 <!-- 是否自动提交事务 -->
			 <prop key="hibernate.connection.autocommit">true</prop>
			 <!-- 指定hibernate在何时释放JDBC连接 -->
			 <prop key="hibernate.connection.release_mode">auto</prop>
			 <!-- 创建session方式 hibernate4.x 的方式 -->
			 <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
			 <!-- javax.persistence.validation.mode默认情况下是auto的，就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包，所以把它设置为none即可 -->
			 <prop key="javax.persistence.validation.mode">none</prop>
			 </props>
			  
		</property>
		<!-- 注解方式配置 -->
		<property name="packagesToScan">
			<list>
				<value>com.leechg.*</value> 
			</list>
		</property>
	</bean>

</beans>